<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Smartpool.Application.Win"
                    x:Class="SpTabControl">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- SpTabControl Button template-->
    <ControlTemplate x:Key="SpTabControlButton" TargetType="Button">
        <Border x:Name="Border" CornerRadius="5, 5, 0, 0" BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{StaticResource SpBackgroundGray}" 
                    BorderBrush="{StaticResource SpAccentGray}" VerticalAlignment="Top" Height="20">
            <ContentPresenter Margin="8,0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SpOrange}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SpOrange}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SpTabControl template -->
    <Style x:Key="{x:Type local:SpTabControl}" TargetType="{x:Type local:SpTabControl}">
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
    <ControlTemplate x:Key="SpTabControl" TargetType="local:SpTabControl">
        <Grid VerticalAlignment="Stretch" Height="20" Background="{StaticResource SpBackgroundGray}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Separator Grid.Column="0" Grid.ColumnSpan="6" Margin="1,0,0,0" Background="{StaticResource SpAccentGray}" VerticalAlignment="Bottom"/>
            <Button x:Name="PART_StatViewButton" Grid.Column="0" Grid.Row="0" Content="Stats" Template="{StaticResource SpTabControlButton}" 
                    Width="Auto" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Foreground}"/>
            <Button x:Name="PART_HistoryViewButton" Grid.Column="1" Grid.Row="0" Content="History" Template="{StaticResource SpTabControlButton}" 
                    Width="Auto" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Foreground}"/>
            <Button x:Name="PART_AddPoolViewButton" Grid.Column="2" Grid.Row="0" Content="Add Pool" Template="{StaticResource SpTabControlButton}" 
                    Width="Auto" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Foreground}"/>
            <Button x:Name="PART_EditPoolViewButton" Grid.Column="3" Grid.Row="0" Content="Edit Pool" Template="{StaticResource SpTabControlButton}" 
                    Width="Auto" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Foreground}"/>
            <Button x:Name="PART_EditUserViewButton" Grid.Column="4" Grid.Row="0" Content="Edit User" Template="{StaticResource SpTabControlButton}" 
                    Width="Auto" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Foreground}"/>

        </Grid>
    </ControlTemplate>

    <!-- ComboBox template 
         Taken from web and modified.
         http://stackoverflow.com/questions/16392670/custom-combobox-in-wpf-application
         Reply by Olonge-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" 
                    Background="{StaticResource SpBackgroundGray}" BorderBrush="{StaticResource SpAccentGray}"
                    CornerRadius="5,0,0,0" BorderThickness="1" />
            <Path x:Name="Arrow" Grid.Column="1" 
                  Fill="{StaticResource SpWhite}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,5 z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SpOrange}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SpOrange}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}"> 
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate> -->

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" 
                            Focusable="false" 
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <!-- Presents the selected item -->
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,2,23,3" VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False" 
                            PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}" 
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{StaticResource SpBackgroundGray}"
                                BorderThickness="1"
                                BorderBrush="{StaticResource SpAccentGray}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource SpWhite}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <!-- Add grid and ellipse here -->
                    <Border Name="Border"
                              Padding="2" BorderThickness="1"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SpOrange}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>

        